version: '3'

services:
  config:
    image: mtulkanov/config:1.0.0
  eureka1:
    image: mtulkanov/eureka:1.0.0
    depends_on:
      - config
    restart: on-failure
    environment:
      - spring.profiles.active=peer1
  eureka2:
    image: mtulkanov/eureka:1.0.0
    depends_on:
      - config
    restart: on-failure
    environment:
      - spring.profiles.active=peer2
  zuul:
    image: mtulkanov/zuul:1.0.0
    ports:
      - '9999:8080'
    depends_on:
      - config
      - eureka1
      - eureka2
    restart: on-failure
  mongo:
    image: mongo
    ports:
      - "27017:27017"
  zookeeper:
    image: 'bitnami/zookeeper:3'
    ports:
      - '2181:2181'
    volumes:
      - 'zookeeper_data:/bitnami'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    image: 'bitnami/kafka:2'
    ports:
      - '9092:9092'
    volumes:
      - 'kafka_data:/bitnami'
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
    restart: on-failure
  kafdrop:
    image: obsidiandynamics/kafdrop
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:9092"
      JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
    depends_on:
      - kafka
    restart: on-failure
  pc:
    image: mtulkanov/pc:1.0.0
    depends_on:
      - config
      - eureka1
      - eureka2
      - mongo
    restart: on-failure
  po:
    image: mtulkanov/po:1.0.0
    depends_on:
      - config
      - eureka1
      - eureka2
      - mongo
      - pc
      - kafka
    restart: on-failure
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:$ELK_VERSION
    ports:
      - '9200:9200'
      - '9300:9300'
    environment:
      - 'discovery.type=single-node'
      - 'xpack.security.enabled=false'
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m -XX:-UseConcMarkSweepGC -XX:-UseCMSInitiatingOccupancyOnly -XX:+UseG1GC -XX:InitiatingHeapOccupancyPercent=75"
    networks:
      - default
  filebeat:
    image: docker.elastic.co/beats/filebeat:$ELK_VERSION
    user: root
    depends_on:
      - elasticsearch
    restart: on-failure
    volumes:
      - /root/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - /var/lib/docker:/var/lib/docker:ro
      - /var/run/docker.sock:/var/run/docker.sock
  kibana:
    image: docker.elastic.co/kibana/kibana:$ELK_VERSION
    depends_on:
      - elasticsearch
    ports:
      - '5601:5601'
    environment:
      - 'elasticsearch.hosts=http://elasticsearch:9200'
      - 'xpack.security.enabled=false'
    restart: on-failure
    networks:
      - default

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local